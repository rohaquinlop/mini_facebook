###############################################################################
# MiniFacebook.CFG - SAMPLE CONFIG FILE FOR MONITORING A MINI-FACEBOOK SERVICES
#
#
# NOTES: This config file assumes that you are using the sample configuration
#    files that get installed with the Nagios quickstart guide.
#
###############################################################################

###############################################################################
#
# COMMAND DEFINITIONS
#
###############################################################################

# Define a command for the host we'll be monitoring

define command{
    command_name    check_api
    command_line    $USER1$/check_http -w 30 -c 40 -H $HOSTADDRESS$ -p "$ARG1$" -u "$ARG2$"
}

###############################################################################
#
# HOST TEMPLATE
#
###############################################################################

# Define a host template for the minifacebook we'll be monitoring

define host{
        name                    generic-minifacebook-host
        use                     generic-host
        check_period            24x7
        check_interval          1               ; Actively check the host every 1 minutes
        retry_interval          1               ; Schedule host check retries at 1 minute intervals
        max_check_attempts      10              ; Check each host 10 times (max)
        check_command           check-host-alive        ; Default command to check if host are "alive"
        notification_period     workhours               ; hosts are only used during the workday
        notification_interval   30              ; Resend notifications every 30 minutes
        notification_options    d,r             ; Only send notifications for specific host states
        contact_groups          admins          ; Notifications get sent to the admins by default
        register                0               ; DONT REGISTER THIS - ITS JUST A TEMPLATE
}

###############################################################################
#
# HOST DEFINITIONS
#
###############################################################################

# Define a host for the minifacebook we'll be monitoring
# Change the host_name, alias, and address to fit your situation

define host {
    use                     generic-minifacebook-host         ; Inherit default values from a template
    host_name               usersapi1             ; The name we're giving to this host
    alias                   usersapi1      ; A longer name associated with the host
    address                 pythonServiceUsersAPI1            ; IP address of the host
    hostgroups              network-facebook        ; Host groups this host is associated with
}

define host {
    use                     generic-minifacebook-host         ; Inherit default values from a template
    host_name               usersapi2             ; The name we're giving to this host
    alias                   usersapi2      ; A longer name associated with the host
    address                 pythonServiceUsersAPI2            ; IP address of the host
    hostgroups              network-facebook        ; Host groups this host is associated with
}

define host {
    use                     generic-minifacebook-host         ; Inherit default values from a template
    host_name               publicationsapi1             ; The name we're giving to this host
    alias                   publicationsapi1      ; A longer name associated with the host
    address                 pythonServicePublicationsAPI1            ; IP address of the host
    hostgroups              network-facebook        ; Host groups this host is associated with
}

define host {
    use                     generic-minifacebook-host         ; Inherit default values from a template
    host_name               publicationsapi2             ; The name we're giving to this host
    alias                   publicationsapi2      ; A longer name associated with the host
    address                 pythonServicePublicationsAPI2            ; IP address of the host
    hostgroups              network-facebook        ; Host groups this host is associated with
}

define host {
    use                     generic-minifacebook-host         ; Inherit default values from a template
    host_name               RabbitMQ             ; The name we're giving to this host
    alias                   RabbitMQ      ; A longer name associated with the host
    address                 rabbitMQService            ; IP address of the host
    hostgroups              network-facebook        ; Host groups this host is associated with
}

define host {
    use                     generic-minifacebook-host         ; Inherit default values from a template
    host_name               Neo4jDB             ; The name we're giving to this host
    alias                   Neo4jDB      ; A longer name associated with the host
    address                 MyNeo4JServiceDB            ; IP address of the host
    hostgroups              network-facebook        ; Host groups this host is associated with
}

define host {
    use                     generic-minifacebook-host         ; Inherit default values from a template
    host_name               MySQLDB             ; The name we're giving to this host
    alias                   MySQLDB      ; A longer name associated with the host
    address                 MySQLServiceDB            ; IP address of the host
    hostgroups              network-facebook        ; Host groups this host is associated with
}

define host {
    use                     generic-minifacebook-host         ; Inherit default values from a template
    host_name               MongoDB             ; The name we're giving to this host
    alias                   MongoDB      ; A longer name associated with the host
    address                 mongoservicedb            ; IP address of the host
    hostgroups              network-facebook        ; Host groups this host is associated with
}

define host {
    use                     generic-minifacebook-host         ; Inherit default values from a template
    host_name               haproxyServiceUsersAPI             ; The name we're giving to this host
    alias                   haproxyServiceUsersAPI      ; A longer name associated with the host
    address                 LoadBalancerServiceUsersAPI            ; IP address of the host
    hostgroups              network-facebook        ; Host groups this host is associated with
}

define host {
    use                     generic-minifacebook-host         ; Inherit default values from a template
    host_name               haproxyServicePublicationsAPI             ; The name we're giving to this host
    alias                   haproxyServicePublicationsAPI      ; A longer name associated with the host
    address                 LoadBalancerServicePublicationsAPI            ; IP address of the host
    hostgroups              network-facebook        ; Host groups this host is associated with
}

###############################################################################
#
# HOST GROUP DEFINITIONS
#
###############################################################################

# A hostgroup for network mini-facebook

define hostgroup {
    hostgroup_name          network-facebook        ; The name of the hostgroup
    alias                   Network MiniFacebook        ; Long name of the group
}

###############################################################################
#
# SERVICE DEFINITIONS
#
###############################################################################

define service {
    use                     generic-service
    host_name               usersapi1
    service_description     PING
    check_command           check_ping!3000.0,80%!5000.0,100%
    check_interval          10
    retry_interval          1
}

define service {
    use                     generic-service
    host_name               usersapi2
    service_description     PING
    check_command           check_ping!3000.0,80%!5000.0,100%
    check_interval          10
    retry_interval          1
}

define service {
    use                     generic-service
    host_name               usersapi2
    service_description     API-HEALTH
    check_command           check_api!5010!/users/ping
    check_interval          10
    retry_interval          1
}

define service {
    use                     generic-service
    host_name               usersapi1
    service_description     API-HEALTH
    check_command           check_api!5010!/users/ping
    check_interval          10
    retry_interval          1
}

define service {
    use                     generic-service
    host_name               RabbitMQ
    service_description     PING
    check_command           check_ping!3000.0,80%!5000.0,100%
    check_interval          10
    retry_interval          1
}

define service {
    use                     generic-service
    host_name               Neo4jDB
    service_description     PING
    check_command           check_ping!3000.0,80%!5000.0,100%
    check_interval          10
    retry_interval          1
}

define service {
    use                     generic-service
    host_name               MySQLDB
    service_description     PING
    check_command           check_ping!3000.0,80%!5000.0,100%
    check_interval          10
    retry_interval          1
}

define service {
    use                     generic-service
    host_name               MongoDB
    service_description     PING
    check_command           check_ping!3000.0,80%!5000.0,100%
    check_interval          10
    retry_interval          1
}

define service {
    use                     generic-service
    host_name               haproxyServiceUsersAPI
    service_description     PING
    check_command           check_ping!3000.0,80%!5000.0,100%
    check_interval          10
    retry_interval          1
}

define service {
    use                     generic-service
    host_name               haproxyServicePublicationsAPI
    service_description     PING
    check_command           check_ping!3000.0,80%!5000.0,100%
    check_interval          10
    retry_interval          1
}

define service {
    use                     generic-service
    host_name               publicationsapi1
    service_description     PING
    check_command           check_ping!3000.0,80%!5000.0,100%
    check_interval          10
    retry_interval          1
}

define service {
    use                     generic-service
    host_name               publicationsapi2
    service_description     PING
    check_command           check_ping!3000.0,80%!5000.0,100%
    check_interval          10
    retry_interval          1
}

define service {
    use                     generic-service
    host_name               publicationsapi1
    service_description     API-HEALTH
    check_command           check_api!5015!/publications/ping
    check_interval          10
    retry_interval          1
}

define service {
    use                     generic-service
    host_name               publicationsapi2
    service_description     API-HEALTH
    check_command           check_api!5015!/publications/ping
    check_interval          10
    retry_interval          1
}